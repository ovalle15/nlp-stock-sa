# upstream frontend {
#     # server 127.0.0.1:8081;
#     server localhost:8081;
#     keepalive 64;
# }


upstream backend {
    server server:3000;
}

upstream client {
    server frontend:8080;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    listen 80;
    listen [::]:80;

    server_name nlp-ssa.dev;

    location /api {
        proxy_pass http://backend/api;
    }

    location / {
        proxy_pass http://client/;
    }

    # location / {
    #     return 301 http://127.0.0.1:8080/app;
    # }

    # ssl_certificate /etc/nginx/ssl/_wildcard.nlp-ssa.dev.pem;
    # ssl_certificate_key /etc/nginx/ssl/_wildcard.nlp-ssa.dev-key.pem;
    ssl_certificate /etc/nginx/certs/nlp-ssa.dev.crt;
    ssl_certificate_key /etc/nginx/certs/nlp-ssa.dev.key;
}

# server {
#     listen 80;
#     listen [::]:80;

#     server_name nlp-ssa.dev;

#     if ($scheme != "https") {
#         return 301 https://$host$request_uri;
#     }
# }

# server {
#     # listen 80;
#     # listen [::]:80;
#     listen 443;
#     listen [::]:443;
#     server_name nlp-ssa.dev;

#     # ssl_certificate /etc/nginx/ssl/_wildcard.nlp-ssa.dev.pem;
#     # ssl_certificate_key /etc/nginx/ssl/_wildcard.nlp-ssa.dev-key.pem;

#     location /api {
#         proxy_set_header    Host $host;
#         proxy_set_header    X-Forwarded-For $remote_addr;
#         # proxy_pass          http://host.docker.internal:5001;
#         proxy_pass          http://127.0.0.1/;
#     }
# }


# server {
#     listen 80;
#     listen [::]:80;
#     server_name nlp-ssa.dev;

#     # ssl_certificate /etc/nginx/ssl/_wildcard.nlp-ssa.dev.pem;
#     # ssl_certificate_key /etc/nginx/ssl/_wildcard.nlp-ssa.dev-key.pem;

#     location / {
#         proxy_set_header  Host $host;
#         proxy_set_header  X-Forwarded-For $remote_addr;
#         proxy_pass         http://host.docker.internal:5001;
#         # proxy_pass        http://127.0.0.1/;
#     }
# }


# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name nlp-ssa.dev;

#     ssl_certificate /etc/nginx/ssl/_wildcard.nlp-ssa.dev.pem;
#     ssl_certificate_key /etc/nginx/ssl/_wildcard.nlp-ssa.dev-key.pem;

#     # Disable insecure TLS versions
#     # ssl_protocols TLSv1.2 TLSv1.3;
#     # ssl_prefer_server_ciphers on;
#     # ssl_ciphers HIGH:!aNULL:!MD5;

#     # Proxy headers
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;

#     # location /api/ {
#     #     resolver 127.0.0.11 valid=30s; # Docker DNS
#     #     proxy_pass http://localhost:3000/api/;
#     #     proxy_redirect default;
#     # }

#     # location / {
#     #     resolver 127.0.0.11 valid=30s; # Docker DNS
#     #     proxy_pass http://localhost:8081/;
#     #     proxy_redirect default;
#     # }

#     location /api/ {
#         proxy_set_header   X-Forwarded-For $remote_addr;
#         proxy_set_header   Host $http_host;
#         # proxy_pass         http://host.docker.internal:5001;
#         proxy_pass         http://localhost:3000/api/;
#     }

#     # location / {
#     #     proxy_set_header   X-Forwarded-For $remote_addr;
#     #     proxy_set_header   Host $http_host;
#     #     # proxy_pass         http://host.docker.internal:5001;
#     #     proxy_pass         http://localhost:8081;
#     # }
# }
